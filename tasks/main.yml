---
# tasks file for hammadrauf.ansible-role-apache2
- debug: var=ansible_os_family
- name: Load OS specific Vars file
  include_vars: "{{ item }}"
  with_first_found:
    - "os_specific_{{ ansible_os_family }}.yml"
    - "os_specific_default.yml"

- name: Update and upgrade apt packages
  become: true
  apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400 #One day
  when:
    - ansible_os_family == 'Debian'  

- name: Update and upgrade yum packages
  become: true
  yum:
    update_cache: yes
    name: '*'
    state: latest
  when:
    - ansible_os_family == 'RedHat' 

- name: Install package Apache
  package:
    name: "{{ ap2_vapache }}"
    state: present
  become: true

- name: Enable the Apache Service, if not already done so
  service:
    name: "{{ ap2_vapache_service }}"
    enabled: true
  become: true

- name: Start the Apache Service, if not already done so
  service:
    name: "{{ ap2_vapache_service }}"
    state: started
  become: true

- name: Check if Apache Default Content folder exists
  stat: path="{{ ap2_vapache_default_content }}"
  register: apc

- name: Delete default Apache content folder if requested.
  file:
    path: "{{ ap2_vapache_default_content }}" 
    state: absent
  when: >
    apc.stat.exists and
    (ap2_vapache_remove_default is defined and
    ap2_vapache_remove_default is true)

- name: Delete the pre-packeged files from Apache Default Content folder
  shell: "/usr/bin/rm -rf {{ ap2_vapache_default_content }}/* && /usr/bin/find {{ ap2_vapache_default_content }}/ -name '.*' ! -name '.' ! -name '..' -delete"
  args:
    removes: "{{ ap2_vapache_default_content }}/index.html"
  become: true
  when: >
    apc.stat.exists and
    (ap2_vapache_remove_default is not defined or
    ap2_vapache_remove_default is false)

- name: Copy the User-Provided index.html.js from Host to remote in the Apache Default Content folder
  ansible.builtin.template:
    src: "{{ ap2_template_index }}"
    dest: "{{ ap2_vapache_default_content }}/index.html"
    owner: "{{ ap2_vapache_user }}"
    group: "{{ ap2_vapache_group }}"
    mode: '0644'
  become: true
  when: >
    (ap2_vapache_remove_default is not defined or
    ap2_vapache_remove_default is false) and
    apc.stat.exists and
    ap2_template_index is defined
    
- name: Copy the included index.html.j2 from Host to remote in the Apache Default Content folder
  ansible.builtin.template:
    src: index.html.j2
    dest: "{{ ap2_vapache_default_content }}/index.html"
    owner: "{{ ap2_vapache_user }}"
    group: "{{ ap2_vapache_group }}"
    mode: '0644'
  become: true
  when: >
    (ap2_vapache_remove_default is not defined or
    ap2_vapache_remove_default is false) and
    apc.stat.exists and
    ap2_template_index is not defined    

- name: Copy the User-Provided site_styles.css from Host to remote in the Apache Default Content folder
  copy:
    src: "{{ ap2_file_css }}"
    dest: "{{ ap2_vapache_default_content }}/site_styles.css"
    owner: "{{ ap2_vapache_user }}"
    group: "{{ ap2_vapache_group }}"
    mode: '0644'
  become: true
  when: > 
    (ap2_vapache_remove_default is not defined or
    ap2_vapache_remove_default is false) and
    apc.stat.exists and
    ap2_file_css is defined

- name: Copy the included site_styles.css from Host to remote in the Apache Default Content folder
  copy:
    src: site_styles.css
    dest: "{{ ap2_vapache_default_content }}/site_styles.css"
    owner: "{{ ap2_vapache_user }}"
    group: "{{ ap2_vapache_group }}"
    mode: '0644'
  become: true
  when: >
    (ap2_vapache_remove_default is not defined or
    ap2_vapache_remove_default is false) and
    apc.stat.exists and
    ap2_file_css is not defined

- name: Copy the User-Defined icon from Host to remote in the Apache Default Content folder
  copy:
    src: "{{ ap2_file_ico }}"
    dest: "{{ ap2_vapache_default_content }}/favicon.ico"
    owner: "{{ ap2_vapache_user }}"
    group: "{{ ap2_vapache_group }}"
    mode: '0644'
  become: true
  when: >
    (ap2_vapache_remove_default is not defined or
    ap2_vapache_remove_default is false) and
    apc.stat.exists and
    ap2_file_ico is defined

- name: Copy the included icon from Host to remote in the Apache Default Content folder
  copy:
    src: castle-icon.ico
    dest: "{{ ap2_vapache_default_content }}/favicon.ico"
    owner: "{{ ap2_vapache_user }}"
    group: "{{ ap2_vapache_group }}"
    mode: '0644'
  become: true
  when: >
    (ap2_vapache_remove_default is not defined or
    ap2_vapache_remove_default is false) and
    apc.stat.exists and
    ap2_file_ico is not defined

- name: Create Custom Content Folders from list if given
  debug:
    msg: " TODO create folders and Untar package into: {{ item }}"
  #   src: castle-icon.ico
  #   dest: "{{ ap2_vapache_default_content }}/favicon.ico"
  #   owner: "{{ ap2_vapache_user }}"
  #   group: "{{ ap2_vapache_group }}"
  #   mode: '0640'
  # become: true
  loop: "{{ ap2_list_custom_content_folders|flatten(levels=1) }}"

- name: Re-Start the Apache Service.
  service:
    name: "{{ ap2_vapache_service }}"
    state: restarted
  become: true
  when: apc.stat.exists

- name: Gather the installed package facts
  ansible.builtin.package_facts:
    manager: auto
  when: ansible_os_family == "RedHat"

- name: If FirewallD is installed then open 'http' port
  ansible.posix.firewalld:
    service: http
    permanent: true
    state: enabled
  become: true
  when: ansible_os_family == "RedHat" and "'firewalld' in ansible_facts.packages"

- name: Re-Start the Firewalld Service
  service: 
    name: "firewalld"
    state: restarted
  become: true
  when: ansible_os_family == "RedHat" and "'firewalld' in ansible_facts.packages"

- name: Perform apache-vhost configurations if vhost vars are defined
  include_role:
    name: hammadrauf.apache_vhosts
  when: apache_vhosts_defaults is defined and apache_vhosts is defined